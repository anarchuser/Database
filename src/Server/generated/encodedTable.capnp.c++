// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: encodedTable.capnp

#include "encodedTable.capnp.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<33> b_de4a929a0096dc24 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     36, 220, 150,   0, 154, 146,  74, 222,
     19,   0,   0,   0,   3,   0,   0,   0,
      1, 206,  87, 161,  35, 252, 230, 234,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 226,   0,   0,   0,
     33,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  71,   0,   0,   0,
     85,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110,  99, 111, 100, 101, 100,  84,
     97,  98, 108, 101,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  98,
     97, 115, 101,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
    122, 118, 173,  56,  85,  25,  69, 207,
      1,   0,   0,   0,  58,   0,   0,   0,
     84,  97,  98, 108, 101,  69,   0,   0,
      4,   0,   0,   0,   3,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    215,  20, 248,  78,   4, 164, 169, 216,
     52,  40, 104,  94,  11, 194,  62, 210,
     17,   0,   0,   0,  82,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   7,   0,   0,   0,
    115, 101, 110, 100,  81, 117, 101, 114,
    121,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   1,   0,
      0,   0,   0,   0,   1,   0,   1,   0, }
};
::capnp::word const* const bp_de4a929a0096dc24 = b_de4a929a0096dc24.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_de4a929a0096dc24[] = {
  &s_d23ec20b5e682834,
  &s_d8a9a4044ef814d7,
};
static const uint16_t m_de4a929a0096dc24[] = {0};
const ::capnp::_::RawSchema s_de4a929a0096dc24 = {
  0xde4a929a0096dc24, b_de4a929a0096dc24.words, 33, d_de4a929a0096dc24, m_de4a929a0096dc24,
  2, 1, nullptr, nullptr, nullptr, { &s_de4a929a0096dc24, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_cf45195538ad767a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    122, 118, 173,  56,  85,  25,  69, 207,
     28,   0,   0,   0,   1,   0,   0,   0,
     36, 220, 150,   0, 154, 146,  74, 222,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  26,   1,   0,   0,
     37,   0,   0,   0,  23,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110,  99, 111, 100, 101, 100,  84,
     97,  98, 108, 101,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  98,
     97, 115, 101,  46,  84,  97,  98, 108,
    101,  69,   0,   0,   0,   0,   0,   0,
      4,   0,   0,   0,   1,   0,   1,   0,
     33,  89, 209,  17,  17,  33, 216, 231,
      1,   0,   0,   0,  50,   0,   0,   0,
     67, 101, 108, 108,  69,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     64,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     61,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     56,   0,   0,   0,   3,   0,   1,   0,
    100,   0,   0,   0,   2,   0,   1,   0,
    104, 101,  97, 100, 101, 114,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     99, 111, 110, 116, 101, 110, 116,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
     33,  89, 209,  17,  17,  33, 216, 231,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cf45195538ad767a = b_cf45195538ad767a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_cf45195538ad767a[] = {
  &s_e7d8211111d15921,
};
static const uint16_t m_cf45195538ad767a[] = {1, 0};
static const uint16_t i_cf45195538ad767a[] = {0, 1};
const ::capnp::_::RawSchema s_cf45195538ad767a = {
  0xcf45195538ad767a, b_cf45195538ad767a.words, 64, d_cf45195538ad767a, m_cf45195538ad767a,
  1, 2, i_cf45195538ad767a, nullptr, nullptr, { &s_cf45195538ad767a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<28> b_e7d8211111d15921 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     33,  89, 209,  17,  17,  33, 216, 231,
     35,   0,   0,   0,   1,   0,   2,   0,
    122, 118, 173,  56,  85,  25,  69, 207,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0,  74,   1,   0,   0,
     41,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     37,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110,  99, 111, 100, 101, 100,  84,
     97,  98, 108, 101,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  98,
     97, 115, 101,  46,  84,  97,  98, 108,
    101,  69,  46,  67, 101, 108, 108,  69,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
    238,  37, 152, 130, 176, 228,  62, 228,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    100,  97, 116,  97,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e7d8211111d15921 = b_e7d8211111d15921.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e7d8211111d15921[] = {
  &s_e43ee4b0829825ee,
};
static const uint16_t m_e7d8211111d15921[] = {0};
static const uint16_t i_e7d8211111d15921[] = {0};
const ::capnp::_::RawSchema s_e7d8211111d15921 = {
  0xe7d8211111d15921, b_e7d8211111d15921.words, 28, d_e7d8211111d15921, m_e7d8211111d15921,
  1, 1, i_e7d8211111d15921, nullptr, nullptr, { &s_e7d8211111d15921, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<94> b_e43ee4b0829825ee = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    238,  37, 152, 130, 176, 228,  62, 228,
     41,   0,   0,   0,   1,   0,   2,   0,
     33,  89, 209,  17,  17,  33, 216, 231,
      1,   0,   7,   0,   1,   0,   5,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  31,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110,  99, 111, 100, 101, 100,  84,
     97,  98, 108, 101,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  98,
     97, 115, 101,  46,  84,  97,  98, 108,
    101,  69,  46,  67, 101, 108, 108,  69,
     46, 100,  97, 116,  97,   0,   0,   0,
     20,   0,   0,   0,   3,   0,   4,   0,
      0,   0, 255, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    125,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    120,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
      1,   0, 254, 255,  16,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    129,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    124,   0,   0,   0,   3,   0,   1,   0,
    136,   0,   0,   0,   2,   0,   1,   0,
      2,   0, 253, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    133,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    128,   0,   0,   0,   3,   0,   1,   0,
    140,   0,   0,   0,   2,   0,   1,   0,
      3,   0, 252, 255,   1,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    137,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    132,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      4,   0, 251, 255,   0,   0,   0,   0,
      0,   0,   1,   0,   4,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    148,   0,   0,   0,   2,   0,   1,   0,
    117, 110,  97, 114, 121,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98, 105, 110,  97, 114, 121,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 104, 111, 114, 116,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    108, 111, 110, 103,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      9,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 101, 120, 116,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e43ee4b0829825ee = b_e43ee4b0829825ee.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e43ee4b0829825ee[] = {
  &s_e7d8211111d15921,
};
static const uint16_t m_e43ee4b0829825ee[] = {1, 3, 2, 4, 0};
static const uint16_t i_e43ee4b0829825ee[] = {0, 1, 2, 3, 4};
const ::capnp::_::RawSchema s_e43ee4b0829825ee = {
  0xe43ee4b0829825ee, b_e43ee4b0829825ee.words, 94, d_e43ee4b0829825ee, m_e43ee4b0829825ee,
  1, 5, i_e43ee4b0829825ee, nullptr, nullptr, { &s_e43ee4b0829825ee, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_d8a9a4044ef814d7 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    215,  20, 248,  78,   4, 164, 169, 216,
     28,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 106,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110,  99, 111, 100, 101, 100,  84,
     97,  98, 108, 101,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  98,
     97, 115, 101,  46, 115, 101, 110, 100,
     81, 117, 101, 114, 121,  36,  80,  97,
    114,  97, 109, 115,   0,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    113, 117, 101, 114, 121,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d8a9a4044ef814d7 = b_d8a9a4044ef814d7.words;
#if !CAPNP_LITE
static const uint16_t m_d8a9a4044ef814d7[] = {0};
static const uint16_t i_d8a9a4044ef814d7[] = {0};
const ::capnp::_::RawSchema s_d8a9a4044ef814d7 = {
  0xd8a9a4044ef814d7, b_d8a9a4044ef814d7.words, 34, nullptr, m_d8a9a4044ef814d7,
  0, 1, i_d8a9a4044ef814d7, nullptr, nullptr, { &s_d8a9a4044ef814d7, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<34> b_d23ec20b5e682834 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
     52,  40, 104,  94,  11, 194,  62, 210,
     28,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 114,   1,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     33,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110,  99, 111, 100, 101, 100,  84,
     97,  98, 108, 101,  46,  99,  97, 112,
    110, 112,  58,  68,  97, 116,  97,  98,
     97, 115, 101,  46, 115, 101, 110, 100,
     81, 117, 101, 114, 121,  36,  82, 101,
    115, 117, 108, 116, 115,   0,   0,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    116,  97,  98, 108, 101,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    122, 118, 173,  56,  85,  25,  69, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d23ec20b5e682834 = b_d23ec20b5e682834.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d23ec20b5e682834[] = {
  &s_cf45195538ad767a,
};
static const uint16_t m_d23ec20b5e682834[] = {0};
static const uint16_t i_d23ec20b5e682834[] = {0};
const ::capnp::_::RawSchema s_d23ec20b5e682834 = {
  0xd23ec20b5e682834, b_d23ec20b5e682834.words, 34, d_d23ec20b5e682834, m_d23ec20b5e682834,
  1, 1, i_d23ec20b5e682834, nullptr, nullptr, { &s_d23ec20b5e682834, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================


#if !CAPNP_LITE
::capnp::Request< ::Database::SendQueryParams,  ::Database::SendQueryResults>
Database::Client::sendQueryRequest(::kj::Maybe< ::capnp::MessageSize> sizeHint) {
  return newCall< ::Database::SendQueryParams,  ::Database::SendQueryResults>(
      0xde4a929a0096dc24ull, 0, sizeHint);
}
::kj::Promise<void> Database::Server::sendQuery(SendQueryContext) {
  return ::capnp::Capability::Server::internalUnimplemented(
      "encodedTable.capnp:Database", "sendQuery",
      0xde4a929a0096dc24ull, 0);
}
::kj::Promise<void> Database::Server::dispatchCall(
    uint64_t interfaceId, uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (interfaceId) {
    case 0xde4a929a0096dc24ull:
      return dispatchCallInternal(methodId, context);
    default:
      return internalUnimplemented("encodedTable.capnp:Database", interfaceId);
  }
}
::kj::Promise<void> Database::Server::dispatchCallInternal(
    uint16_t methodId,
    ::capnp::CallContext< ::capnp::AnyPointer, ::capnp::AnyPointer> context) {
  switch (methodId) {
    case 0:
      return sendQuery(::capnp::Capability::Server::internalGetTypedContext<
           ::Database::SendQueryParams,  ::Database::SendQueryResults>(context));
    default:
      (void)context;
      return ::capnp::Capability::Server::internalUnimplemented(
          "encodedTable.capnp:Database",
          0xde4a929a0096dc24ull, methodId);
  }
}
#endif  // !CAPNP_LITE

// Database
#if !CAPNP_LITE
constexpr ::capnp::Kind Database::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Database::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Database::TableE
constexpr uint16_t Database::TableE::_capnpPrivate::dataWordSize;
constexpr uint16_t Database::TableE::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Database::TableE::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Database::TableE::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Database::TableE::CellE
constexpr uint16_t Database::TableE::CellE::_capnpPrivate::dataWordSize;
constexpr uint16_t Database::TableE::CellE::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Database::TableE::CellE::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Database::TableE::CellE::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Database::TableE::CellE::Data
constexpr uint16_t Database::TableE::CellE::Data::_capnpPrivate::dataWordSize;
constexpr uint16_t Database::TableE::CellE::Data::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Database::TableE::CellE::Data::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Database::TableE::CellE::Data::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Database::SendQueryParams
constexpr uint16_t Database::SendQueryParams::_capnpPrivate::dataWordSize;
constexpr uint16_t Database::SendQueryParams::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Database::SendQueryParams::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Database::SendQueryParams::_capnpPrivate::schema;
#endif  // !CAPNP_LITE

// Database::SendQueryResults
constexpr uint16_t Database::SendQueryResults::_capnpPrivate::dataWordSize;
constexpr uint16_t Database::SendQueryResults::_capnpPrivate::pointerCount;
#if !CAPNP_LITE
constexpr ::capnp::Kind Database::SendQueryResults::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Database::SendQueryResults::_capnpPrivate::schema;
#endif  // !CAPNP_LITE



